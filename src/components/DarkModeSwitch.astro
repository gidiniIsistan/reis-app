---
export const prerender = true;
---
<button type="button" id="theme-toggle" class="flex items-center w-full hover:bg-lilac-400 dark:hover:bg-lilac-600 rounded-lg text-lilac-100 hover:text-white">
    <div class="relative flex items-center justify-center size-9">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" id="theme-toggle-dark-icon" class="absolute size-9 opacity-0 invisible fill-slate-400 transition-opacity duration-500">
            <path stroke-linecap="round" stroke-linejoin="round" d="M21.752 15.002A9.72 9.72 0 0 1 18 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 0 0 3 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 0 0 9.002-5.998Z" />
        </svg>
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" id="theme-toggle-light-icon" class="absolute size-9 opacity-0 invisible fill-yellow-500 stroke-yellow-500 transition-opacity duration-500">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v2.25m6.364.386-1.591 1.591M21 12h-2.25m-.386 6.364-1.591-1.591M12 18.75V21m-4.773-4.227-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0Z" />
        </svg>
    </div>
    <h1 class="py-3 ml-1 text-lg font-semibold">Tema Actual</h1>
</button>
<script>
    document.addEventListener('astro:page-load', () => {
        const darkIcon = document.getElementById('theme-toggle-dark-icon');
        const lightIcon = document.getElementById('theme-toggle-light-icon');
        const themeToggleBtn = document.getElementById('theme-toggle') as HTMLButtonElement;

        if (!darkIcon || !lightIcon || !themeToggleBtn) return;

        const updateIcons = (isDark: boolean) => {
            darkIcon.classList.toggle('opacity-0', !isDark); darkIcon.classList.toggle('invisible', !isDark);
            darkIcon.classList.toggle('opacity-100', isDark); darkIcon.classList.toggle('visible', isDark);

            lightIcon.classList.toggle('opacity-0', isDark); lightIcon.classList.toggle('invisible', isDark);
            lightIcon.classList.toggle('opacity-100', !isDark); lightIcon.classList.toggle('visible', !isDark);
        };

        const toggleTheme = () => {
            const isDark = document.documentElement.classList.toggle('dark');
            localStorage.setItem('color-theme', isDark ? 'dark' : 'light');
            updateIcons(isDark);
        };

        const initTheme = () => {
            const isDark = localStorage.getItem('color-theme') === 'dark' || 
                (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches);
            document.documentElement.classList.toggle('dark', isDark);
            updateIcons(isDark);
        };

        themeToggleBtn.addEventListener('click', toggleTheme);
        initTheme();
    });
</script>
