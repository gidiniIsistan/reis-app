---
import GroupTable from "@/components/GroupTable.astro";
import {HttpError} from "@/errors/HttpError";
import {checkSession} from "@/services/authService";
import {getGroup, getGroupUsers,  emptyGroup} from "@/services/groupService";
import {emptyUser} from "@/services/userService";
import {errorHandler} from "@/errors/errorHandler";

export const partial = true;
const data = {
    users: [emptyUser],
    group: emptyGroup,
    user_id: '',
}

try {
    if (Astro.request.method !== 'GET') {
        throw new HttpError(405, 'Method Not Allowed', `Method ${Astro.request.method} is not allowed`, { value: 'GET' });
    }

    const { group_id } = Astro.params;
    if (!group_id) {
        throw new HttpError(400, 'Bad Request', 'group_id is required');
    }

    const session = await checkSession(Astro.request);

    const users = await getGroupUsers(group_id);
    if (!users || users.length === 0) { // if no users, is because the group does not exist, because leader is always in the group
        throw new HttpError(404, 'Not Found', 'Group not found');
    }

    const group = await getGroup(group_id);
    if (!group) {
        throw new HttpError(500, 'Internal Server Error', 'There was an error getting the group');
    }

    data.users = users;
    data.group = group;
    data.user_id = session.user.id;
} catch (error) {
    return errorHandler(error);
}
---
<GroupTable users={data.users} group={data.group} user_id={data.user_id} />
