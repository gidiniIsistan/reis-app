---
export const prerender = false;
import QuizLayout from '@/layouts/QuizLayout.astro';
import NewFontBtn from '@/components/NewFontBtn.astro';
import NavigationButtons from '@/components/NavigationButtons.astro';
import ConditionalQuestion from '@/components/ConditionalQuestion.astro';
import SourcesTable from '@/components/SourcesTable.astro';
import Section3 from '@/components/Section3.astro';
import BackButton from '@/components/BackButton.astro';
import { errorHandler } from '@/errors/errorHandler';
import { checkSession } from '@/services/authService';
import { HttpError } from '@/errors/HttpError';
import type { DxQuestion } from '@/services/dxQuestionService';
import type { Source } from '@/services/sourceService';
import type { Attachment } from '@/services/quizAttachmentService';

const { class_id, group_id, dx_question_id: qnId } = Astro.params;
let question: DxQuestion;
let sources: Source[] = [];
let attachments: Attachment[] = [];
let teacher = false;

try {
    if (!class_id || !group_id || !qnId) {
        throw new HttpError(400, 'Bad request', 'Missing class_id, group_id or dx_question_id');
    }

    const session = await checkSession(Astro.request);
    teacher = session.user.role === "teacher";

    const response = await fetch(new URL(`/api/dx-question/${qnId}?include_attachments=true&include_sources=true`, Astro.url).toString(), {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
            'Cookie': Astro.request.headers.get('Cookie') || '',
        },
    });
    const responseData = await response.json();

    if (!responseData.success) {
        throw new HttpError(responseData.status, responseData.title, responseData.detail);
    }
    question = await responseData.data.question;
    sources = await responseData.data.sources;
    attachments = await responseData.data.attachments;
    //console.log(question, sources, attachments);
} catch (error) {
    return errorHandler(error);
}
---
<QuizLayout title="Pregunta Derivada">
    <script is:raw type="module">import "/scripts/form.js";</script>
    <div class="form-container px-8 pb-8 pt-4 flex flex-col flex-1 overflow-auto" data-id={qnId}>
        <div class="flex gap-2 items-center">
            <div class="flex-1 flex text-lilac-400 dark:text-white hover:text-lilac-500">
                <BackButton href=`/class/${class_id}/group/${group_id}` text={true} />
            </div>

            <div class="">
                <h2 id="question-display" class="text-xl text-center font-semibold w-fit max-w-full overflow-hidden text-ellipsis break-word border-b-2 border-transparent hover:border-lilac-500">{question.question}</h2>
                <input
                    hx-put=`/api/dx-question/${qnId}`
                    hx-trigger="enter"
                    hx-swap="none"
                    name="question"
                    id="question-input"
                    value={question.question}
                    class="hidden text-xl font-semibold text-center bg-transparent w-auto max-w-full box-border focus:outline-none border-b-2 border-transparent focus:border-lilac-500 transition-colors duration-500"
                >
            </div> 

            <div class="flex-1 flex justify-end">
                <h2 class="text-lg font-semibold"><span id="section-number">1</span>/3</h2>
                {!teacher &&
                <a
                    hx-delete=`/api/dx-question/${qnId}`
                    hx-param="none"
                    hx-swap="none"
                    hx-confirm="¿Estás seguro de que quieres eliminar esta pregunta?"
                    hx-on--after-request=`if (event.detail.successful) window.history.back();`
                    class="ml-2 text-red-500 cursor-pointer hover:-translate-y-1 hover:scale-110 transition ease-in-out delay-75"
                >
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-7">
                        <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
                    </svg>
                </a>
                }
            </div>
        </div>

        <hr class="w-full border-gray-300 my-4">

        <div id="multi-section-form" class="flex-1 overflow-hidden mb-4">
            <!-- SECCION 1 -->
            <section class="section flex flex-col justify-center h-full overflow-auto">
                <h2 class="text-xl font-semibold text-center mb-2">Lograron responder la pregunta derivada?</h2>
                <ConditionalQuestion editable={!teacher} answer={question.dx_answer} name="dx_answer" endpoint=`/api/dx-question/${qnId}` attachments={attachments} />
            </section>

            <!-- SECCION 2 -->
            <section class="section flex flex-col h-full">
                {!teacher && <NewFontBtn dx_question_id={qnId} />}
                <span class="mb-2"></span>
                <SourcesTable sources={sources} del={!teacher} endpoint=`/api/dx-question/${qnId}/sources` />
            </section>

            <!-- SECCION 3 -->
            <!--<section class="section flex flex-col h-full">-->
                <Section3 editable={!teacher} subject={question.subject} topic={question.topic} issues={question.issues} endpoint=`/api/dx-question/${qnId}` />
            <!--</section>-->
        </div>
        <NavigationButtons save={!teacher} />
    </div>
</QuizLayout>
