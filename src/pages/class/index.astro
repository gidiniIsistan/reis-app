---
import BaseLayout from '@/layouts/BaseLayout.astro';
import ModalCreateClass from "@/components/ModalCreateClass.astro";
import { errorHandler } from '@/errors/errorHandler';
import { checkSession } from '@/services/authService';
import { getTeacherRecorridos, getUserRecorridos, type Recorrido } from '@/services/recorridoService';
import Tabs from '@/components/Tabs.astro';

let recorridos: Recorrido[] = [];
let teacher = false;

try {
    const session = await checkSession(Astro.request);
    teacher = session.user.role === "teacher";

    recorridos = teacher
        ? await getTeacherRecorridos(session.user.id)
        : await getUserRecorridos(session.user.id);

} catch (error) {
    return errorHandler(error);
}

const tabs = recorridos.map((recorrido) => ({
    id: recorrido.id,
    title: recorrido.title,
    endpoint: `/api/recorrido/${recorrido.id}/get-rendered-classes`
}));
---
<BaseLayout title="Mis clases">
    <div class="flex items-center justify-between mb-4 mx-8 mt-8">
        <h1 class="text-4xl font-bold text-gray-700 dark:text-white">Mis Clases</h1>
        { teacher && <button id="openModal"
            class="bg-white hover:bg-lilac-500 text-lilac-400 hover:text-white font-semibold text-lg px-4 py-2 rounded-md transition-transform transform hover:scale-110"
        >
            Nueva Clase
        </button>
        <ModalCreateClass />}
    </div>
    <div class="flex flex-col w-full flex-1 overflow-hidden">
        <div class="mx-8">
            <Tabs iterable={tabs} />
        </div>

        <ul class="w-full overflow-y-auto grid md:grid-cols-2 lg:grid-cols-3 gap-8 p-8 pt-4" id="tab-content">
            <li><p id="empty-message" class="text-lg font-semibold text-gray-500 text-center my-auto hidden">No tienes clases creadas</p></li>
        </ul>
    </div>
</BaseLayout>
<script>
document.addEventListener('astro:page-load', () => {
    const openModalButton = document.getElementById('openModal');
    const modal = document.getElementById('modal');
    const closeModalButton = document.getElementById('closeModal');
    const closeModalAnchor = document.getElementById('closeModal2');

    if (openModalButton && modal && closeModalButton && closeModalAnchor) {
        // Open the modal
        openModalButton.addEventListener('click', () => {
            modal.style.display = 'flex';
        });

        // Close the modal when clicking on the close button
        closeModalButton.addEventListener('click', () => {
            modal.style.display = 'none';
        });

        // Close the modal when clicking outside of the modal content
        modal.addEventListener('click', (event) => {
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        });

        // Close the modal when clicking on the close anchor
        closeModalAnchor.addEventListener('click', (e) => {
            e.preventDefault();
            modal.style.display = 'none';
        });
    }
});
</script>
